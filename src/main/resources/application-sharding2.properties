
#sharding-jdbc分片规则配置
#数据源
spring.shardingsphere.datasource.names=m1,m2

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=root

spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=root

# 指定t_order表的数据分布情况，配置数据节点 m1.user1,m1.user2
spring.shardingsphere.sharding.tables.user.actual-data-nodes=m$->{1..2}.user$->{1..2}

# 指定t_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.user.key-generator.column=id
spring.shardingsphere.sharding.tables.user.key-generator.type=SNOWFLAKE

# 指定user表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.user.table-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.tables.user.table-strategy.inline.algorithm-expression=user$->{uid % 2 + 1}

# 指定分库
spring.shardingsphere.sharding.tables.user.database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.user.database-strategy.inline.algorithm-expression=m$->{id % 2 + 1}

# 设置全局表
#spring.shardingsphere.sharding.broadcast-tables=tb_rule
#spring.shardingsphere.sharding.tables.tb_rule.key-generator.column=id
#spring.shardingsphere.sharding.tables.tb_rule.key-generator.type=SNOWFLAKE

# 设置默认数据源
spring.shardingsphere.sharding.default-data-source-name=m2
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m2

# 设置 rule 垂直分库，如果只是指定库可以只写下面一行即可
#spring.shardingsphere.sharding.tables.tb_rule.actual-data-nodes=m$->{2}.tb_rule
#
#spring.shardingsphere.sharding.tables.tb_rule.key-generator.column=id
#spring.shardingsphere.sharding.tables.tb_rule.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.tb_rule.table-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.tables.tb_rule.table-strategy.inline.algorithm-expression=tb_rule

# 打开sql输出日志
spring.shardingsphere.props.sql.show=true
